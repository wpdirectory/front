/**
 * Functions
 */

// Helper to get Color values
@function get-color( $color-name ) {
  @return map-get( $colors, $color-name );
}

/**
 * Rem Calc Helper
 * Simplified from Foundation for Sites: https://github.com/zurb/foundation-sites/blob/39056a7e821e052c1f7026505a4bbb748996d838/scss/util/_unit.scss
 */
@function rem-calc( $values, $base: 'rem' ) {
  $rem-values: ();
  $count: length( $values );

  $base: $base-font-size;

  // If the base font size is a %, then multiply it by 16px
  // This is because 100% font size = 16px in most all browsers
  @if $base == '%' {
    $base: ($base / 100%) * 16px;
  }

  // Using rem as base allows correct scaling
  @if $base == 'rem' {
    $base: ( $base / ( $base * 0 + 1 ) ) * 16px;
  }

  @if $count == 1 {
    @return to-rem( $values, $base );
  }

  @for $i from 1 through $count {
    $rem-values: append( $rem-values, to-rem( nth( $values, $i ), $base ) );
  }

  @return $rem-values;
}

@function to-rem($value, $base: null) {
  // Check if the value is a number
  @if type-of($value) != 'number' {
    @warn inspect($value) + ' was passed to rem-calc(), which is not a number.';
    @return $value;
  }

  // Transform em into rem if someone hands over 'em's
  @if unit($value) == 'em' {
    $value: ($value / ( $value * 0 + 1 )) * 1rem;
  }

  // Calculate rem if units for $value is not rem or em
  @if unit($value) != 'rem' {
    $value: ( $value / ( $value * 0 + 1 ) ) / ( $base / ( $base * 0 + 1 ) ) * 1rem;
  }

  // Turn 0rem into 0
  @if $value == 0rem {
    $value: 0;
  }

  @return $value;
}
